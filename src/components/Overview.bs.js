// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Card from "../domain/card.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Stack from "../domain/stack.bs.js";
import * as State from "../state/state.bs.js";
import * as React from "react";
import * as BoxComp from "./BoxComp.bs.js";
import * as TitleComp from "./TitleComp.bs.js";

function Overview$Input(Props) {
  var dispatch = Curry._1(State.AppState.useDispatch, undefined);
  var match = React.useState(function () {
        return "";
      });
  var setInput = match[1];
  var input = match[0];
  var onChange = function (e) {
    return Curry._1(setInput, e.currentTarget.value);
  };
  var onKeyDown = function (e) {
    if (e.key === "Enter") {
      Curry._1(dispatch, /* AddCard */{
            _0: Card.make(input, "", /* New */0)
          });
      e.currentTarget.value = "";
      return Curry._1(setInput, (function (param) {
                    return "";
                  }));
    }
    
  };
  var onClick = function (param) {
    return Curry._1(dispatch, /* Review */0);
  };
  return React.createElement(React.Fragment, undefined, React.createElement("div", undefined, input), React.createElement("input", {
                  onKeyDown: onKeyDown,
                  onChange: onChange
                }), React.createElement("button", {
                  onClick: onClick
                }, "Start"));
}

var Input = {
  make: Overview$Input
};

function Overview(Props) {
  var $$new = Curry._1(State.AppState.useSelector, (function (param) {
          return Stack.Selectors.getByLevel(param.stack, /* New */0);
        }));
  var familiar = Curry._1(State.AppState.useSelector, (function (param) {
          return Stack.Selectors.getByLevel(param.stack, /* Familiar */1);
        }));
  var remember = Curry._1(State.AppState.useSelector, (function (param) {
          return Stack.Selectors.getByLevel(param.stack, /* Remember */2);
        }));
  var know = Curry._1(State.AppState.useSelector, (function (param) {
          return Stack.Selectors.getByLevel(param.stack, /* Know */3);
        }));
  var iteration = Curry._1(State.AppState.useSelector, (function (param) {
          return param.iteration;
        }));
  return React.createElement(React.Fragment, undefined, React.createElement(TitleComp.make, {
                  children: "Iteration: " + String(iteration)
                }), React.createElement(Overview$Input, {}), React.createElement(BoxComp.make, {
                  cards: $$new,
                  label: "New"
                }), React.createElement(BoxComp.make, {
                  cards: familiar,
                  label: "Familiar"
                }), React.createElement(BoxComp.make, {
                  cards: remember,
                  label: "Remember"
                }), React.createElement(BoxComp.make, {
                  cards: know,
                  label: "Know"
                }));
}

var make = Overview;

export {
  Input ,
  make ,
  
}
/* State Not a pure module */
