// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Card from "./card.bs.js";

function make(cards) {
  if (cards) {
    return /* Review */{
            _0: {
              toReview: cards.tl,
              reviewing: cards.hd,
              remember: /* [] */0,
              forget: /* [] */0
            }
          };
  } else {
    return /* Overview */0;
  }
}

function next(param, known) {
  var forget = param.forget;
  var remember = param.remember;
  var reviewing = param.reviewing;
  var toReview = param.toReview;
  var match = known ? (
      reviewing !== undefined ? [
          {
            hd: Card.Update.next(reviewing),
            tl: remember
          },
          forget
        ] : [
          remember,
          forget
        ]
    ) : (
      reviewing !== undefined ? [
          remember,
          {
            hd: Card.Update.back(reviewing),
            tl: forget
          }
        ] : [
          remember,
          forget
        ]
    );
  var match$1 = toReview ? [
      toReview.hd,
      toReview.tl
    ] : [
      undefined,
      /* [] */0
    ];
  return {
          toReview: match$1[1],
          reviewing: match$1[0],
          remember: match[0],
          forget: match[1]
        };
}

var Update = {
  next: next
};

var emptyReview = {
  toReview: /* [] */0,
  reviewing: undefined,
  remember: /* [] */0,
  forget: /* [] */0
};

var empty = /* Overview */0;

export {
  emptyReview ,
  empty ,
  make ,
  Update ,
  
}
/* No side effect */
