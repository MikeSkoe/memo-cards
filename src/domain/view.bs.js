// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Card from "./card.bs.js";
import * as Stack from "./stack.bs.js";

var emptyReview = {
  toReview: Stack.empty,
  reviewing: undefined,
  remember: Stack.empty,
  forget: Stack.empty
};

function make(head, tail) {
  return /* Review */{
          _0: {
            toReview: tail,
            reviewing: head,
            remember: Stack.empty,
            forget: Stack.empty
          }
        };
}

function next(param, known) {
  var forget = param.forget;
  var remember = param.remember;
  var reviewing = param.reviewing;
  var toReview = param.toReview;
  var match = known ? (
      reviewing !== undefined ? [
          Stack.Update.addCard(remember, Card.Update.next(reviewing)),
          forget
        ] : [
          remember,
          forget
        ]
    ) : (
      reviewing !== undefined ? [
          remember,
          Stack.Update.addCard(forget, Card.Update.back(reviewing))
        ] : [
          remember,
          forget
        ]
    );
  var match$1 = toReview ? [
      toReview.hd,
      toReview.tl
    ] : [
      undefined,
      /* [] */0
    ];
  return {
          toReview: match$1[1],
          reviewing: match$1[0],
          remember: match[0],
          forget: match[1]
        };
}

var Update = {
  next: next
};

var empty = /* Overview */0;

export {
  emptyReview ,
  empty ,
  make ,
  Update ,
  
}
/* No side effect */
