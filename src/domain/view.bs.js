// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Card from "./card.bs.js";
import * as Stack from "./stack.bs.js";

var emptyReview = {
  toReview: Stack.empty,
  reviewing: Card.empty,
  remember: Stack.empty,
  forget: Stack.empty,
  skipped: Stack.empty
};

function make(head, tail) {
  return {
          TAG: /* InProgress */0,
          _0: {
            toReview: tail,
            reviewing: head,
            remember: Stack.empty,
            forget: Stack.empty,
            skipped: Stack.empty
          }
        };
}

function next(param, familiarity) {
  var skipped = param.skipped;
  var forget = param.forget;
  var remember = param.remember;
  var toReview = param.toReview;
  var reviewing$p = Card.mapLevel(param.reviewing, (function (__x) {
          return Card.shiftLevel(__x, familiarity);
        }));
  var forget$1 = familiarity === /* Back */0 ? Stack.addCard(forget, reviewing$p) : forget;
  var skipped$1 = familiarity === /* Skip */1 ? Stack.addCard(skipped, reviewing$p) : skipped;
  var remember$1 = familiarity === /* Next */2 ? Stack.addCard(remember, reviewing$p) : remember;
  if (toReview) {
    return {
            TAG: /* InProgress */0,
            _0: {
              toReview: toReview.tl,
              reviewing: toReview.hd,
              remember: remember$1,
              forget: forget$1,
              skipped: skipped$1
            }
          };
  } else {
    return {
            TAG: /* Done */1,
            _0: Stack.concat(Stack.concat(Stack.addCard(forget$1, reviewing$p), skipped$1), remember$1)
          };
  }
}

var empty = /* Overview */0;

export {
  emptyReview ,
  empty ,
  make ,
  next ,
  
}
/* No side effect */
